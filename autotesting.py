import os
import time
import requests
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from docx import Document
from docx.shared import Inches
from selenium.webdriver.chrome.service import Service

LOGIN_URL = "https://juie.amanbay.info/ru/sign-in"
ACCOUNT_TYPES_URL = "https://juie.amanbay.info/ru/account-types"
PHONE = "+7 777 777 77 77"
PASSWORD = "admin123"

def smart_login(driver):
    driver.get(LOGIN_URL)
    time.sleep(1.5)
    driver.find_element(By.XPATH, "//input[@type='tel']").send_keys(PHONE)
    driver.find_element(By.XPATH, "//input[@type='password']").send_keys(PASSWORD)
    driver.find_element(By.XPATH, "//button[contains(.,'–í–æ–π—Ç–∏')]").click()
    time.sleep(2.5)

def smart_screenshot(driver, filename):
    driver.save_screenshot(filename)
    return filename

def scroll_and_screenshot(driver, filename):
    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
    time.sleep(1)
    driver.save_screenshot(filename)
    return filename

def check_special_chars_validation(driver, doc, index):
    driver.get(ACCOUNT_TYPES_URL)
    time.sleep(2)


    try:
        add_btn = driver.find_element(By.XPATH, "//button[contains(.,'–î–æ–±–∞–≤–∏—Ç—å —Ç–∏–ø —Å—á–µ—Ç–∞')]")
        add_btn.click()
        time.sleep(1.5)
    except:
        doc.add_paragraph("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–ø–∞ —Å—á–µ—Ç–∞.")
        return

    try:
        input_el = driver.find_element(By.XPATH, "//input[contains(@placeholder,'–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è')]")
        input_el.clear()
        input_el.send_keys("!!!@@@###")
        time.sleep(1)
        
        save_btn = driver.find_element(By.XPATH, "//button[contains(.,'–°–æ–∑–¥–∞—Ç—å')]")
        save_btn.click()
        time.sleep(1.5)


        screen_path = f"error_validation_{index}.png"
        smart_screenshot(driver, screen_path)
        doc.add_paragraph("–°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—è '–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è' –Ω–∞ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã:")
        doc.add_picture(screen_path, width=Inches(5.5))
    except:
        doc.add_paragraph("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª—è '–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è' —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏.")

def collect_ui_state(driver):
    return {
        'titles': [el.text for el in driver.find_elements(By.TAG_NAME, "h1") if el.text],
        'buttons': [el.text or el.get_attribute('aria-label') or el.get_attribute('title')
                    for el in driver.find_elements(By.TAG_NAME, "button") if el.is_displayed()],
        'inputs': [el.get_attribute('name') or el.get_attribute('placeholder')
                   for el in driver.find_elements(By.TAG_NAME, "input") if el.is_displayed()],
    }

def main():
    options = Options()
    options.add_argument("--start-maximized")
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=options)

    doc = Document()
    doc.add_heading("JUie ‚Äî –ê–≤—Ç–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", 0)
    doc.add_paragraph(f"–î–∞—Ç–∞ —Ç–µ—Å—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")

    smart_login(driver)
    doc.add_heading("1. –õ–æ–≥–∏–Ω ‚Äî –£—Å–ø–µ—à–Ω–æ!", level=1)

    driver.get(ACCOUNT_TYPES_URL)
    time.sleep(2)

    top_shot = "account_types_top.png"
    smart_screenshot(driver, top_shot)
    doc.add_heading("2. –°—Ç—Ä–∞–Ω–∏—Ü–∞ '–¢–∏–ø—ã —Å—á–µ—Ç–æ–≤'", level=1)
    doc.add_paragraph("–°–∫—Ä–∏–Ω—à–æ—Ç –≤–µ—Ä—Ö–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
    doc.add_picture(top_shot, width=Inches(5.6))

    bottom_shot = "account_types_bottom.png"
    scroll_and_screenshot(driver, bottom_shot)
    doc.add_paragraph("–°–∫—Ä–∏–Ω—à–æ—Ç –Ω–∏–∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
    doc.add_picture(bottom_shot, width=Inches(5.6))


    ui = collect_ui_state(driver)
    doc.add_paragraph("–ó–∞–≥–æ–ª–æ–≤–∫–∏ (h1): " + ", ".join(ui['titles']) if ui['titles'] else "–ó–∞–≥–æ–ª–æ–≤–∫–æ–≤ –Ω–µ—Ç.")
    doc.add_paragraph("–ö–Ω–æ–ø–∫–∏: " + ", ".join([b for b in ui['buttons'] if b]) if ui['buttons'] else "–ö–Ω–æ–ø–æ–∫ –Ω–µ—Ç.")
    doc.add_paragraph("–ü–æ–ª—è –≤–≤–æ–¥–∞: " + ", ".join([i for i in ui['inputs'] if i]) if ui['inputs'] else "–ü–æ–ª–µ–π –Ω–µ—Ç.")

    doc.add_heading("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã", level=1)
    check_special_chars_validation(driver, doc, 3)

    driver.quit()
    doc.save("juie_autotest_report.")

    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç—á—ë—Ç: juie_autotest_report.docx")
    print("\nüìã –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —á–µ–∫-–ª–∏—Å—Ç—ã:")
    print("‚úîÔ∏è –õ–æ–≥–∏–Ω")
    print("‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã '–¢–∏–ø—ã —Å—á–µ—Ç–æ–≤'")
    print("‚úîÔ∏è –°–±–æ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –∫–Ω–æ–ø–æ–∫, –ø–æ–ª–µ–π")
    print("‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—è '–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è' –Ω–∞ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã")
    print("‚úîÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç—ã –≤–µ—Ä—Ö–∞ –∏ –Ω–∏–∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    print("‚úîÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç —Ñ–æ—Ä–º—ã —Å –æ—à–∏–±–∫–æ–π")

if __name__ == "__main__":
    main()
